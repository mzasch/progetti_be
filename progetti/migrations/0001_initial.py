# Generated by Django 3.1.1 on 2020-10-19 07:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('cognome', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docenti',
                'ordering': ['cognome', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Esterno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('descrizione', models.TextField(max_length=100)),
            ],
            options={
                'verbose_name': 'Esterno',
                'verbose_name_plural': 'Esterni',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='FunzioneStrumentale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome della funzione strumentale', max_length=50, verbose_name='Funzione Strumentale')),
                ('descrizione', models.TextField(help_text='Descrizione della funzione strumentale', max_length=200, verbose_name='Descrizione FS')),
                ('docente_fs', models.ForeignKey(help_text='Docente incaricato per questa FS', on_delete=django.db.models.deletion.RESTRICT, to='progetti.docente', verbose_name='Docente')),
            ],
            options={
                'verbose_name': 'Funzione Strumentale',
                'verbose_name_plural': 'Funzioni Strumentali',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Materiale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('descrizione', models.TextField(max_length=100)),
            ],
            options={
                'verbose_name': 'Materiale',
                'verbose_name_plural': 'Materiali',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Progetto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(help_text='Titolo del progetto', max_length=50, verbose_name='Titolo Progetto')),
                ('obiettivi', models.TextField(help_text='Obiettivi del progetto', max_length=200)),
                ('n_docenti_dest', models.PositiveSmallIntegerField(help_text='Numero di docenti destinatari', verbose_name='Docenti destinatari')),
                ('n_studenti_dest', models.PositiveSmallIntegerField(help_text='Numero di studenti destinatari', verbose_name='Studenti destinatari')),
                ('n_esterni', models.PositiveSmallIntegerField(help_text='Numero di esterni coinvolti', verbose_name='Esterni coinvolti')),
                ('n_ore_previste', models.PositiveSmallIntegerField(help_text='Numero totale di ore previste', verbose_name='Ore previste')),
                ('doc_referente', models.ForeignKey(help_text='Docente responsabile del progetto', on_delete=django.db.models.deletion.RESTRICT, to='progetti.docente', verbose_name='Docente referente')),
                ('fs_referente', models.ForeignKey(help_text='Funzione stumentale referente del progetto', on_delete=django.db.models.deletion.RESTRICT, to='progetti.funzionestrumentale', verbose_name='FS referente')),
            ],
            options={
                'verbose_name': 'Progetto',
                'verbose_name_plural': 'Progetti',
                'ordering': ['titolo'],
            },
        ),
        migrations.CreateModel(
            name='UsoMateriale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materiale', models.ForeignKey(help_text='Il materiale in uso', on_delete=django.db.models.deletion.CASCADE, to='progetti.materiale', verbose_name='Materiale')),
                ('progetto', models.ForeignKey(help_text='Il progetto per il quale si usa questo materiale', on_delete=django.db.models.deletion.CASCADE, to='progetti.progetto', verbose_name='Progetto')),
            ],
            options={
                'verbose_name': 'Utilizzo',
                'verbose_name_plural': 'Utilizzi',
                'ordering': ['progetto', 'materiale'],
            },
        ),
    ]
